{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\React Module Test 2\\\\src\\\\components\\\\Input.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport \"../styles/Input.Module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Input = ({\n  id,\n  handleNewNote\n}) => {\n  _s();\n  const [note, setNote] = React.useState(\"\");\n  const handleInputChange = e => {\n    const {\n      value\n    } = e.target;\n    setNote(value);\n  };\n  const handleSendClick = () => {\n    //scroll to bottom\n\n    const newNote = {\n      date: new Date().toLocaleDateString(),\n      time: new Date().toLocaleTimeString(),\n      content: note,\n      id: Math.floor(Math.random() * 1000)\n    };\n    handleNewNote(newNote);\n    const notesGroup = JSON.parse(localStorage.getItem(\"noteGroups\")) || [];\n    const groupIndex = notesGroup.findIndex(group => group.id === id);\n    if (groupIndex === -1) {\n      console.error(`Group with ID ${id} not found`);\n      return;\n    }\n\n    //  new note into the notes array of the group\n    const group = notesGroup[groupIndex];\n    group.notes.push(newNote);\n\n    // Update the notes group\n    localStorage.setItem(\"noteGroups\", JSON.stringify(notesGroup));\n\n    //clear the textarea\n    setNote(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \" input-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \" input-div flex flex-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"note\",\n        id: \"\",\n        cols: \"30\",\n        rows: \"6\",\n        className: \"note-input \",\n        placeholder: \"Enter your text here...........\",\n        onChange: handleInputChange,\n        onKeyDown: e => {\n          if (e.key === \"Enter\") {\n            handleSendClick();\n          }\n        },\n        value: note\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n        className: \"send-btn\",\n        width: \"25\",\n        height: \"29\",\n        viewBox: \"0 0 35 29\",\n        fill: \"none\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        onClick: handleSendClick,\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          d: \"M0 29V18.125L14.5 14.5L0 10.875V0L34.4375 14.5L0 29Z\",\n          fill: \"#ABABAB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(Input, \"l4b83JBpKzh+zvY0jif08W5Oai4=\");\n_c = Input;\nexport default Input;\nvar _c;\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Input","id","handleNewNote","_s","note","setNote","useState","handleInputChange","e","value","target","handleSendClick","newNote","date","Date","toLocaleDateString","time","toLocaleTimeString","content","Math","floor","random","notesGroup","JSON","parse","localStorage","getItem","groupIndex","findIndex","group","console","error","notes","push","setItem","stringify","className","children","name","cols","rows","placeholder","onChange","onKeyDown","key","fileName","_jsxFileName","lineNumber","columnNumber","width","height","viewBox","fill","xmlns","onClick","d","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/React Module Test 2/src/components/Input.jsx"],"sourcesContent":["import React from \"react\";\nimport \"../styles/Input.Module.css\";\n\nconst Input = ({ id, handleNewNote }) => {\n  const [note, setNote] = React.useState(\"\");\n\n  const handleInputChange = (e) => {\n    const { value } = e.target;\n    setNote(value);\n  };\n\n  const handleSendClick = () => {\n    //scroll to bottom\n\n    const newNote = {\n      date: new Date().toLocaleDateString(),\n      time: new Date().toLocaleTimeString(),\n      content: note,\n      id: Math.floor(Math.random() * 1000),\n    };\n\n    handleNewNote(newNote);\n\n    const notesGroup = JSON.parse(localStorage.getItem(\"noteGroups\")) || [];\n\n    const groupIndex = notesGroup.findIndex((group) => group.id === id);\n    if (groupIndex === -1) {\n      console.error(`Group with ID ${id} not found`);\n      return;\n    }\n\n    //  new note into the notes array of the group\n    const group = notesGroup[groupIndex];\n\n    group.notes.push(newNote);\n\n    // Update the notes group\n    localStorage.setItem(\"noteGroups\", JSON.stringify(notesGroup));\n\n    //clear the textarea\n    setNote(\"\");\n  };\n  return (\n    <div className=\" input-container\">\n      <div className=\" input-div flex flex-row\">\n        <textarea\n          name=\"note\"\n          id=\"\"\n          cols=\"30\"\n          rows=\"6\"\n          className=\"note-input \"\n          placeholder=\"Enter your text here...........\"\n          onChange={handleInputChange}\n          onKeyDown={(e) => {\n            if (e.key === \"Enter\") {\n              handleSendClick();\n            }\n          }}\n          value={note}\n        ></textarea>\n        <svg\n          className=\"send-btn\"\n          width=\"25\"\n          height=\"29\"\n          viewBox=\"0 0 35 29\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          onClick={handleSendClick}\n        >\n          <path\n            d=\"M0 29V18.125L14.5 14.5L0 10.875V0L34.4375 14.5L0 29Z\"\n            fill=\"#ABABAB\"\n          />\n        </svg>\n      </div>\n    </div>\n  );\n};\n\nexport default Input;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}