{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\react assignment\\\\src\\\\components\\\\CreateNote.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"../styles/CreateNote.Module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst colorOptions = [{\n  color: \"var(--notes-color-1)\",\n  name: \"Color 1\"\n}, {\n  color: \"var(--notes-color-2)\",\n  name: \"Color 2\"\n}, {\n  color: \"var(--notes-color-3)\",\n  name: \"Color 3\"\n}, {\n  color: \"var(--notes-color-4)\",\n  name: \"Color 4\"\n}, {\n  color: \"var(--notes-color-5)\",\n  name: \"Color 5\"\n}, {\n  color: \"var(--notes-color-6)\",\n  name: \"Color 6\"\n}];\nconst CreateNote = ({\n  noteBtnClick,\n  noteGroups,\n  setNewNoteGroup,\n  setNoteBtnClick,\n  setNoteGroups\n}) => {\n  _s();\n  const [groupName, setGroupName] = useState(\"\");\n  const [selectedColor, setSelectedColor] = useState(\"\");\n  const [nameError, setNameError] = useState(false);\n  const [colorError, setColorError] = useState(false);\n  const handleGroupNameChange = e => {\n    setGroupName(e.target.value);\n    setNameError(false);\n  };\n  const handleColorClick = color => {\n    setSelectedColor(color);\n    setColorError(false);\n  };\n  const handleCreateGroup = () => {\n    if (groupName.trim() === \"\") {\n      setNameError(true);\n      return;\n    }\n    if (selectedColor === \"\") {\n      setColorError(true);\n      return;\n    }\n    const newGroup = {\n      id: Math.floor(Math.random() * 1000),\n      name: groupName,\n      color: selectedColor,\n      notes: []\n    };\n    setNewNoteGroup([...noteGroups, newGroup]);\n    localStorage.setItem(\"noteGroups\", JSON.stringify([...noteGroups, newGroup]));\n    setGroupName(\"\");\n    setSelectedColor(\"\");\n    setNoteBtnClick(false);\n    setNoteGroups(JSON.parse(localStorage.getItem(\"noteGroups\")));\n  };\n  const displayContainer = noteBtnClick ? \"flex\" : \"none\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-body \",\n    style: {\n      display: displayContainer\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-note-container flex \",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"create-note-title\",\n        children: \"Create New Notes group\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"create-note-input-container flex flex-row justify-start\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          className: \"label\",\n          children: \"Group Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          className: \"create-note-input placeholder\",\n          placeholder: \"Enter your group name....\",\n          value: groupName,\n          onChange: handleGroupNameChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"create-note-input-container flex flex-row justify-start\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"color\",\n          className: \"label\",\n          children: \"Choose colour\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"colors flex flex-row\",\n          children: colorOptions.map(({\n            color,\n            name\n          }) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `circle color ${selectedColor === color ? \"selected\" : \"\"}`,\n            style: {\n              backgroundColor: color\n            },\n            onClick: () => handleColorClick(color)\n          }, color, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), nameError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"show-error\",\n        children: \"*Please Enter your group name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this), colorError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"show-error\",\n        children: \"*Please Choose Color\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"create-btn\",\n        onClick: handleCreateGroup,\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateNote, \"eoSUvnXzOCf3/GcBEErTqxuaW+o=\");\n_c = CreateNote;\nexport default CreateNote;\nvar _c;\n$RefreshReg$(_c, \"CreateNote\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","colorOptions","color","name","CreateNote","noteBtnClick","noteGroups","setNewNoteGroup","setNoteBtnClick","setNoteGroups","_s","groupName","setGroupName","selectedColor","setSelectedColor","nameError","setNameError","colorError","setColorError","handleGroupNameChange","e","target","value","handleColorClick","handleCreateGroup","trim","newGroup","id","Math","floor","random","notes","localStorage","setItem","JSON","stringify","parse","getItem","displayContainer","className","style","display","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","placeholder","onChange","map","backgroundColor","onClick","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/react assignment/src/components/CreateNote.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"../styles/CreateNote.Module.css\";\n\nconst colorOptions = [\n  { color: \"var(--notes-color-1)\", name: \"Color 1\" },\n  { color: \"var(--notes-color-2)\", name: \"Color 2\" },\n  { color: \"var(--notes-color-3)\", name: \"Color 3\" },\n  { color: \"var(--notes-color-4)\", name: \"Color 4\" },\n  { color: \"var(--notes-color-5)\", name: \"Color 5\" },\n  { color: \"var(--notes-color-6)\", name: \"Color 6\" },\n];\n\nconst CreateNote = ({\n  noteBtnClick,\n  noteGroups,\n  setNewNoteGroup,\n  setNoteBtnClick,\n  setNoteGroups,\n}) => {\n  const [groupName, setGroupName] = useState(\"\");\n  const [selectedColor, setSelectedColor] = useState(\"\");\n  const [nameError, setNameError] = useState(false);\n  const [colorError, setColorError] = useState(false);\n\n  const handleGroupNameChange = (e) => {\n    setGroupName(e.target.value);\n    setNameError(false);\n  };\n\n  const handleColorClick = (color) => {\n    setSelectedColor(color);\n    setColorError(false);\n  };\n\n  const handleCreateGroup = () => {\n    if (groupName.trim() === \"\") {\n      setNameError(true);\n      return;\n    }\n    if (selectedColor === \"\") {\n      setColorError(true);\n      return;\n    }\n    const newGroup = {\n      id: Math.floor(Math.random() * 1000),\n      name: groupName,\n      color: selectedColor,\n      notes: [],\n    };\n    setNewNoteGroup([...noteGroups, newGroup]);\n    localStorage.setItem(\n      \"noteGroups\",\n      JSON.stringify([...noteGroups, newGroup])\n    );\n    setGroupName(\"\");\n    setSelectedColor(\"\");\n    setNoteBtnClick(false);\n    setNoteGroups(JSON.parse(localStorage.getItem(\"noteGroups\")));\n  };\n\n  const displayContainer = noteBtnClick ? \"flex\" : \"none\";\n\n  return (\n    <div className=\"container-body \" style={{ display: displayContainer }}>\n      <div className=\"create-note-container flex \">\n        <p className=\"create-note-title\">Create New Notes group</p>\n        <div className=\"create-note-input-container flex flex-row justify-start\">\n          <label htmlFor=\"name\" className=\"label\">\n            Group Name\n          </label>\n          <input\n            type=\"text\"\n            name=\"name\"\n            className=\"create-note-input placeholder\"\n            placeholder=\"Enter your group name....\"\n            value={groupName}\n            onChange={handleGroupNameChange}\n          />\n        </div>\n        <div className=\"create-note-input-container flex flex-row justify-start\">\n          <label htmlFor=\"color\" className=\"label\">\n            Choose colour\n          </label>\n          <div className=\"colors flex flex-row\">\n            {colorOptions.map(({ color, name }) => (\n              <div\n                key={color}\n                className={`circle color ${\n                  selectedColor === color ? \"selected\" : \"\"\n                }`}\n                style={{ backgroundColor: color }}\n                onClick={() => handleColorClick(color)}\n              ></div>\n            ))}\n          </div>\n        </div>\n        {nameError && (\n          <p className=\"show-error\">*Please Enter your group name</p>\n        )}\n        {colorError && <p className=\"show-error\">*Please Choose Color</p>}\n        <button className=\"create-btn\" onClick={handleCreateGroup}>\n          Create\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default CreateNote;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}